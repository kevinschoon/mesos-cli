<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mesos-cli</title>
    <link>https://vektorlab.github.io/mesos-cli/index.xml</link>
    <description>Recent content on mesos-cli</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://vektorlab.github.io/mesos-cli/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Getting Started</title>
      <link>https://vektorlab.github.io/mesos-cli/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vektorlab.github.io/mesos-cli/getting-started/</guid>
      <description>

&lt;p&gt;Featureful commandline interface for &lt;a href=&#34;http://mesos.apache.com&#34;&gt;Apache Mesos&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mesos-cli&lt;/code&gt; is designed to be a lightweight alternative to the &lt;a href=&#34;https://github.com/apache/mesos/tree/master/src/cli&#34;&gt;native tool&lt;/a&gt; provided with Mesos, with extended features for orchestration, management, and task scheduling.&lt;/p&gt;

&lt;p&gt;By interacting entirely with the new Mesos &lt;a href=&#34;http://mesos.apache.org/documentation/latest/scheduler-http-api/&#34;&gt;HTTP scheduler API&lt;/a&gt;, &lt;code&gt;mesos-cli&lt;/code&gt; does not require a direct network connection to the Mesos Master server, which makes it more flexible than other frameworks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;em&gt;mesos-cli is under active development and not yet considered stable!&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;distinctive-features-roadmap&#34;&gt;Distinctive Features &amp;amp; Roadmap&lt;/h1&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;th&gt;ready&lt;/th&gt;
&lt;th&gt;roadmap&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Built ontop of the new Mesos HTTP V1 API&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Simple installation without platform specific libmesos drivers&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Streamimg sandbox file content content to console (including task stdout and stderr)&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Effortlessly run a local Mesos cluster&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Pure integration with Apache Mesos outside of the DC/OS ecosystem&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Lightweight scheduler for running arbitrary containers&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Top-like interface for monitoring a cluster&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Full support for latest Mesos features, e.g health checks, etc&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ability to search and filter across most Mesos types&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Subscribe to and monitor master event stream&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Run docker-compose files directly against Mesos&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;✓&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Recipes</title>
      <link>https://vektorlab.github.io/mesos-cli/recipes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vektorlab.github.io/mesos-cli/recipes/</guid>
      <description>

&lt;h1 id=&#34;recipes&#34;&gt;Recipes&lt;/h1&gt;

&lt;p&gt;The majority of workloads that are run on cloud infrastructure can be broken down into three major categories: &lt;strong&gt;batch&lt;/strong&gt;, &lt;strong&gt;long running&lt;/strong&gt;, or &lt;strong&gt;repeated&lt;/strong&gt;. We provide examples of running each of these workloads below:&lt;/p&gt;

&lt;h4 id=&#34;batch-mesos-cli-recipes-batch&#34;&gt;&lt;a href=&#34;https://vektorlab.github.io/mesos-cli/mesos-cli/recipes/batch&#34;&gt;Batch&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Run on-demand, are usually synchronous, and produce some fixed result like a transformed file.&lt;/p&gt;

&lt;h4 id=&#34;long-running-coming-soon&#34;&gt;Long Running (coming soon)&lt;/h4&gt;

&lt;p&gt;Long running workloads are often server processes which need to be restarted if they fail.&lt;/p&gt;

&lt;h4 id=&#34;repeated-coming-soon&#34;&gt;Repeated (coming soon)&lt;/h4&gt;

&lt;p&gt;Repeated workloads run at some fixed interval and are scheduled with a system like cron.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>configuration</title>
      <link>https://vektorlab.github.io/mesos-cli/getting-started/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vektorlab.github.io/mesos-cli/getting-started/configuration/</guid>
      <description>

&lt;p&gt;It is recommended that you create a bash alias for mesos-cli, note that if the default &lt;code&gt;mesos&lt;/code&gt; executable is installed on your system this will override it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; # With a binary installation
 echo &amp;quot;alias mesos=mesos-cli&amp;quot; &amp;gt;&amp;gt; $HOME/.bashrc
 # With a Docker installation
 echo &amp;quot;alias mesos=docker run --rm -ti -v $HOME/.meoss-cli.json:/root/.mesos-cli.json --net host quay.io/vektorlab/mesos-cli &amp;gt;&amp;gt; $HOME/.bashrc&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;test-your-installation&#34;&gt;Test Your Installation&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;mesos-cli&lt;/strong&gt; has built-in support for launching a local cluster for testing and development.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Launch a local Mesos cluster
mesos local up
# List agents running on your cluster
mesos agents

ID                                      HOSTNAME                CPUS    MEM     GPUS    DISK   
48bf0171-3c61-49ed-9e05-3ac1a9274478-S0 localhost.localdomain   4.00    6867.00 0.00    5114.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;profiles&#34;&gt;Profiles&lt;/h3&gt;

&lt;p&gt;You can configure &amp;ldquo;profiles&amp;rdquo; by creating a JSON file at &lt;code&gt;~/.mesos-cli.json&lt;/code&gt;. This file is automatically created for you the first time you invoke &lt;strong&gt;mesos-cli&lt;/strong&gt;. You can choose an alternative profile for use with any command. All options specified in a profile may be overriden by specifying the same option on the command-line.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;profiles&amp;quot;: {
    &amp;quot;default&amp;quot;: {
      &amp;quot;master&amp;quot;: &amp;quot;http://localhost:5050&amp;quot;,
      &amp;quot;debug&amp;quot;: false,
      &amp;quot;restart&amp;quot;: false
    },
    &amp;quot;production&amp;quot;: {
      &amp;quot;master&amp;quot;: &amp;quot;http://localhost:5050&amp;quot;,
      &amp;quot;debug&amp;quot;: false,
      &amp;quot;restart&amp;quot;: true
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Batch Jobs</title>
      <link>https://vektorlab.github.io/mesos-cli/recipes/batch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vektorlab.github.io/mesos-cli/recipes/batch/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://i.giphy.com/3og0IO9FUngqYxdBnO.gif&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;generate-an-optimized-gif-on-mesos&#34;&gt;Generate an optimized GIF on Mesos&lt;/h3&gt;

&lt;p&gt;In this example we generate a GIF from a video file and upload it to &lt;a href=&#34;https://giphy.com&#34;&gt;giphy.com&lt;/a&gt;. We use &lt;a href=&#34;http://ffmpeg.org/&#34;&gt;ffmpeg&lt;/a&gt;
for optimization and conversion of the video file. The process is borrowed from &lt;a href=&#34;http://blog.pkh.me/p/21-high-quality-gif-with-ffmpeg.html&#34;&gt;this&lt;/a&gt;
excellent tutorial where you can learn a little bit more about what is actually happening. The process can be broken down into four steps where each step is run within a separate container and is dependent on the subsequent step. We will call each step in this process a &lt;em&gt;task&lt;/em&gt; and call the
collection of tasks a &lt;em&gt;job&lt;/em&gt;. This very simple and linear process can be visualized with a dag:
&lt;img src=&#34;https://vektorlab.github.io/mesos-cli/mesos-cli/img/linear.svg&#34; alt=&#34;dag&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;storage-considerations&#34;&gt;Storage considerations&lt;/h4&gt;

&lt;p&gt;One of the most challenging aspects of running containerized workloads is how to manage application state. Traditionally an application is run on a single server with some fixed storage device that retains all of it&amp;rsquo;s data. When running in containerized environment applications often move across several machines and need to have access to consistent storage. There are many approaches for dealing with this in Mesos which we will not cover here. It is assumed going forward that all Mesos agents have access to a shared storage path at &lt;code&gt;/mnt&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;tasks&#34;&gt;Tasks&lt;/h4&gt;

&lt;p&gt;Each task is described in the batch processing example &lt;a href=&#34;https://raw.githubusercontent.com/vektorlab/mesos-cli/master/examples/batch_processing/Mesosfile&#34;&gt;Mesosfile&lt;/a&gt; in the &lt;strong&gt;mesos-cli&lt;/strong&gt; source directory.&lt;/p&gt;

&lt;h5 id=&#34;download&#34;&gt;Download&lt;/h5&gt;

&lt;p&gt;We use the Mesos &lt;a href=&#34;http://mesos.apache.org/documentation/latest/fetcher/&#34;&gt;fetcher&lt;/a&gt; to download a video file from Wikimedia and then copy it onto shared storage.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Download Source  # A friendly name given to each task
  command:
    environment:  # Array of environment variables exposed inside the container.
      variables:
      - name: OUTPUT_FILE
        value: /mnt/input.ogv
    uris:
      -
        # The URL to the source file we are converting
        value: https://upload.wikimedia.org/wikipedia/commons/2/2c/WorldSunshine.ogv
        # The name we give to the downloaded file
        output_file: input.ogv
    # Execute the value as a shell command e.g. /bin/sh -c $value
    shell: true
    # Copy the downloaded file onto our shared storage path
    value: cp -v $MESOS_SANDBOX/input.ogv $OUTPUT_FILE
    user: root
  container:
    type: MESOS
    volumes:
    # Expose a path on the host within the container
    - container_path: /mnt
      host_path: /mnt
      mode: RW
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;generate-a-palette-file&#34;&gt;Generate a palette file&lt;/h4&gt;

&lt;p&gt;GIFs are limited to a palette of 256 colors which may not necessarily be optimized for the underlying images.
We use ffmpeg to generate a png palette file from the source video which is then used as a backing color palette
of our GIF. The resulting palette file is saved to the shared &lt;code&gt;/mnt&lt;/code&gt; path.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Generate Palette
  command:
    uris:
      -
        value: /mnt/input.ogv
    environment:
      variables:
        - name: INPUT_FILE
          value: /mnt/input.ogv
        - name: OUTPUT_FILE
          value: /mnt/palette.png
        - name: FILTERS
          value: fps=10,scale=1200:-1:flags=lanczos
    shell: true
    value: ffmpeg -v warning -i $INPUT_FILE -vf &amp;quot;$FILTERS,palettegen&amp;quot;  -y $OUTPUT_FILE
    user: root
  container:
    type: MESOS
    mesos:
      image:
        type: DOCKER
        docker:
          name: jrottenberg/ffmpeg:3.2
    volumes:
    - container_path: /mnt
      host_path: /mnt
      mode: RW
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;generate-the-gif-from-the-video-file-with-the-reference-palette&#34;&gt;Generate the GIF from the video file with the reference palette&lt;/h4&gt;

&lt;p&gt;Next we take the video file, the generated palette, and create a GIF from our video file saving the output to the shared &lt;code&gt;/mnt&lt;/code&gt; path.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;- name: Transform to GIF
  command:
    uris:
      -
        value: /mnt/input.ogv
    environment:
      variables:
        - name: INPUT_FILE
          value: /mnt/input.ogv
        - name: PALETTE_FILE
          value: /mnt/palette.png
        - name: OUTPUT_FILE
          value: /mnt/output.gif
        - name: FILTERS
          value: fps=10,scale=1200:-1:flags=lanczos
    shell: true
    value: ffmpeg -v warning -i $INPUT_FILE -i $PALETTE_FILE -lavfi &amp;quot;$FILTERS [x]; [x][1:v] paletteuse&amp;quot; -y $OUTPUT_FILE
    user: root
  container:
    type: MESOS
    mesos:
      image:
        type: DOCKER
        docker:
          name: jrottenberg/ffmpeg:3.2
    volumes:
    - container_path: /mnt
      host_path: /mnt
      mode: RW
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;upload-the-generated-gif-to-giphy&#34;&gt;Upload the generated GIF to Giphy&lt;/h4&gt;

&lt;p&gt;In the final step we take the newly created GIF file and upload it to giphy.com. The API key used below is provided by their &lt;a href=&#34;https://github.com/Giphy/GiphyAPI&#34;&gt;beta API&lt;/a&gt;. We also record the API response to a file so we can generate a link to the uploaded file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# Upload the output to Giphy
- name: Upload to Giphy
  command:
    uris:
      -
        value: /mnt/output.gif
    environment:
      variables:
        - name: API_KEY
          value: dc6zaTOxFJmzC
        - name: OUTPUT_FILE
          value: /mnt/output.gif
    shell: true
    value:  curl -F &amp;quot;file=@$OUTPUT_FILE&amp;quot;  -F &amp;quot;api_key=$API_KEY&amp;quot; &amp;quot;http://upload.giphy.com/v1/gifs&amp;quot; &amp;gt; upload.json
    user: root
  container:
    type: MESOS
    volumes:
    - container_path: /mnt
      host_path: /mnt
      mode: RW

&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;run-the-job&#34;&gt;Run the job!&lt;/h4&gt;

&lt;p&gt;We can run the job from the mesos-cli examples &lt;a href=&#34;https://github.com/vektorlab/mesos-cli/tree/master/examples/batch_processing&#34;&gt;directory&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Mesosfile&lt;/code&gt; will be automatically chosen loaded, we use the &lt;code&gt;--sync&lt;/code&gt; flag to ensure each task is run synchronously and without failure.
We can also include the &lt;code&gt;--restart&lt;/code&gt; which will retry each task automatically if it fails.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd mesos-cli/examples/batch_processing
$ ls -la
total 12
drwxr-xr-x 2 kevin kevin 4096 Mar 16 17:06 .
drwxr-xr-x 3 kevin kevin 4096 Mar 15 17:17 ..
-rw-r--r-- 1 kevin kevin 2466 Mar 16 16:59 Mesosfile
$ mesos run --sync --restart
2017-03-16T16:59:33.229+0700	INFO	CALL	{&amp;quot;type&amp;quot;: &amp;quot;SUBSCRIBE&amp;quot;, &amp;quot;framework&amp;quot;: &amp;quot;&amp;amp;FrameworkInfo{User:root,Name:mesos-cli,ID:&amp;amp;FrameworkID{Value:,},FailoverTimeout:nil,Checkpoint:nil,Role:nil,Hostname:nil,Principal:nil,WebuiUrl:nil,Capabilities:[],Labels:nil,}&amp;quot;}
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can look at all of the tasks ran with &lt;strong&gt;mesos-cli&lt;/strong&gt; or with the Mesos UI.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mesos tasks --all
ID                                  	NAME            	FRAMEWORK	STATE        	CPU	MEM	GPU	DISK
16f66b16-0889-4f22-8c9f-d797a034e4ef	Download Source 	3ae4ade2 	TASK_FINISHED	0.1	64 	0  	64  
449f1384-16ca-4bc2-8378-e427d1a662ba	Generate Palette	3ae4ade2 	TASK_FINISHED	0.1	64 	0  	64  
bbf68b38-47e9-4cae-b7f2-5d1167fbcfa2	Transform To GIF	3ae4ade2 	TASK_FINISHED	0.1	64 	0  	64  
71228718-22fb-4453-8b0d-f2d836835b62	Upload to Giphy 	3ae4ade2 	TASK_FINISHED	0.1	64 	0  	64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally we can browse the sandbox directory of the final task and read it&amp;rsquo;s output to determine the URL for Gliphy&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mesos list 3ae4ade2-a512-4819-8d32-ff7c9b4df0a0-S0 /mesos/agents/0/slaves/3ae4ade2-a512-4819-8d32-ff7c9b4df0a0-S0/frameworks/3ae4ade2-a512-4819-8d32-ff7c9b4df0a0-0000/executors/71228718-22fb-4453-8b0d-f2d836835b62/runs/ba88d0e7-27b1-43ba-b4d3-71a5ef707822
UID 	GID 	MODE 	MODIFIED	SIZE	PATH       
root	root	33188	TODO    	253 	output.gif 
root	root	33188	TODO    	247 	stderr     
root	root	33188	TODO    	246 	stdout     
root	root	33188	TODO    	251 	upload.json

$ mesos read 3ae4ade2-a512-4819-8d32-ff7c9b4df0a0-S0 /mesos/agents/0/slaves/3ae4ade2-a512-4819-8d32-ff7c9b4df0a0-S0/frameworks/3ae4ade2-a512-4819-8d32-ff7c9b4df0a0-0000/executors/71228718-22fb-4453-8b0d-f2d836835b62/runs/ba88d0e7-27b1-43ba-b4d3-71a5ef707822/upload.json |jq .
{
  &amp;quot;data&amp;quot;: {
    &amp;quot;id&amp;quot;: &amp;quot;3og0IO9FUngqYxdBnO&amp;quot; &amp;lt;-- Here is what we want
  },
  &amp;quot;meta&amp;quot;: {
    &amp;quot;status&amp;quot;: 200,
    &amp;quot;msg&amp;quot;: &amp;quot;OK&amp;quot;,
    &amp;quot;response_id&amp;quot;: &amp;quot;58ca62bfa940de891bba28d1&amp;quot;
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally we can construct a URL: &lt;code&gt;https://giphy.com/gifs/3og0IO9FUngqYxdBnO&lt;/code&gt; and&amp;hellip; voilà! :&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/3og0IO9FUngqYxdBnO/source.gif&#34; alt=&#34;output&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Notice</title>
      <link>https://vektorlab.github.io/mesos-cli/notice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vektorlab.github.io/mesos-cli/notice/</guid>
      <description>

&lt;h1 id=&#34;credits&#34;&gt;Credits&lt;/h1&gt;

&lt;h4 id=&#34;documentation&#34;&gt;Documentation&lt;/h4&gt;

&lt;p&gt;This documentation is generated with &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt; and the &lt;a href=&#34;https://github.com/matcornic/hugo-theme-learn&#34;&gt;hugo-theme-learn&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;licenses&#34;&gt;Licenses&lt;/h1&gt;

&lt;h4 id=&#34;apache-mesos&#34;&gt;Apache Mesos&lt;/h4&gt;

&lt;p&gt;Apache Mesos is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/apache/mesos/master/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;mesos-go&#34;&gt;mesos-go&lt;/h4&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/mesos/mesos-go&#34;&gt;mesos-go&lt;/a&gt; project is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/mesos/mesos-go/master/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Usage</title>
      <link>https://vektorlab.github.io/mesos-cli/usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vektorlab.github.io/mesos-cli/usage/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;mesos-cli&lt;/strong&gt; is broken into several subcommands, you can find detailed options for each command by passing the &lt;code&gt;--help&lt;/code&gt; flag.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Usage: mesos-cli [OPTIONS] COMMAND [arg...]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;profile=&amp;ldquo;default&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Profile to load&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;config=&amp;ldquo;/home/kevin/.mesos-cli.json&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Path to load config from&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;debug=false&lt;/td&gt;
&lt;td&gt;Enable debugging&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;version&lt;/td&gt;
&lt;td&gt;Show the version and exit&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;subcommands&#34;&gt;Subcommands&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;agents&lt;/td&gt;
&lt;td&gt;List Mesos Agents&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;list&lt;/td&gt;
&lt;td&gt;List files in a Mesos sandbox&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;local&lt;/td&gt;
&lt;td&gt;Run a local Mesos cluster&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;read&lt;/td&gt;
&lt;td&gt;Read the contents of a file&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;run&lt;/td&gt;
&lt;td&gt;Run tasks on Mesos&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;tasks&lt;/td&gt;
&lt;td&gt;List Mesos tasks&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;top&lt;/td&gt;
&lt;td&gt;Display a Mesos top interface&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>agents</title>
      <link>https://vektorlab.github.io/mesos-cli/usage/agents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vektorlab.github.io/mesos-cli/usage/agents/</guid>
      <description>

&lt;p&gt;List all Mesos Agents running on the target cluster.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Usage: mesos-cli agents [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;master=&amp;ldquo;&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Mesos Master&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>installation</title>
      <link>https://vektorlab.github.io/mesos-cli/getting-started/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vektorlab.github.io/mesos-cli/getting-started/installation/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;mesos-cli&lt;/strong&gt; can be installed by downloading the latest release for your architecture or it can be run from a Docker container.&lt;/p&gt;

&lt;h2 id=&#34;binaries&#34;&gt;Binaries&lt;/h2&gt;

&lt;p&gt;You can download binary packages for your platform (linux/darwin) from the &lt;a href=&#34;https://github.com/vektorlab/mesos-cli/releases&#34;&gt;releases&lt;/a&gt; section on Github or below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vektorlab/mesos-cli/releases/download/v0.0.8/mesos-cli-linux-amd64-v0.0.8&#34;&gt;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vektorlab/mesos-cli/releases/download/v0.0.8/mesos-cli-darwin-amd64-v0.0.8&#34;&gt;OSX/Darwin&lt;/a&gt;

&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;docker&#34;&gt;Docker&lt;/h2&gt;

&lt;p&gt;A Docker container is also available for download:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker pull quay.io/vektorlab/mesos-cli
docker run --rm -ti quay.io/vektorlab/mesos-cli tasks --master http://your-mesos-server:5050
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://vektorlab.github.io/mesos-cli/usage/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vektorlab.github.io/mesos-cli/usage/list/</guid>
      <description>

&lt;p&gt;List the sandbox directory of a task&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Usage: mesos-cli list [OPTIONS] ID PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;master=&amp;ldquo;127.0.0.1:5050&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Mesos Master&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-a, &amp;ndash;absolute=false&lt;/td&gt;
&lt;td&gt;Show absolute file paths&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;all=false&lt;/td&gt;
&lt;td&gt;Show all tasks&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;framework=&amp;ldquo;&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Filter FrameworkID&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;fuzzy=true&lt;/td&gt;
&lt;td&gt;Fuzzy match Task name or Task ID prefix&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;name=&amp;ldquo;&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Filter Task name&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;id=&amp;ldquo;&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Filter Task ID&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;state=[]&lt;/td&gt;
&lt;td&gt;Filter based on Task state&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mesos list --master http://localhost:5050 5b7a7d41-1f2a-4b6d-93fd-48354d7fa785-S0  /opt/mesos/0/slaves/5b7a7d41-1f2a-4b6d-93fd-48354d7fa785-S0/frameworks/5b7a7d41-1f2a-4b6d-93fd-48354d7fa785-0115/executors/807fe9fa-55df-40fa-ab4f-20e359d51d43/runs/4295fd85-5023-4b0d-a9c8-1d9bdce309ba

UID 	GID 	MODE      	MODIFIED                     	SIZE  	PATH
root	root	-rw-r--r--	2017-01-07 22:35:46 -0500 EST	1527  	stderr
root	root	-rw-r--r--	2017-01-08 17:39:03 -0500 EST	642717	stdout
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>local</title>
      <link>https://vektorlab.github.io/mesos-cli/usage/local/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vektorlab.github.io/mesos-cli/usage/local/</guid>
      <description>

&lt;p&gt;Launch a local Mesos cluster for development and testing purposes. This command requires that you have Docker installed locally, and uses the &lt;a href=&#34;https://github.com/vektorcloud/mesos&#34;&gt;vektorcloud/mesos&lt;/a&gt; image.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mesos-cli local [OPTIONS] COMMAND [arg...]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;options&#34;&gt;Options&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;profile&lt;/td&gt;
&lt;td&gt;Profile to load&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;config&lt;/td&gt;
&lt;td&gt;Path to load config from&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;level&lt;/td&gt;
&lt;td&gt;Level of verbosity&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;subcommands&#34;&gt;Subcommands&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;up&lt;/td&gt;
&lt;td&gt;Start the local cluster&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;down&lt;/td&gt;
&lt;td&gt;Stop the local cluster&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;status&lt;/td&gt;
&lt;td&gt;Display the status of the local cluster&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;rm&lt;/td&gt;
&lt;td&gt;Remove the local cluster&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>read</title>
      <link>https://vektorlab.github.io/mesos-cli/usage/read/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vektorlab.github.io/mesos-cli/usage/read/</guid>
      <description>

&lt;p&gt;Read the contents of a file on the given agent at the given path&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mesos-cli read [OPTIONS] TASKID FILE
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-f, &amp;ndash;follow=false&lt;/td&gt;
&lt;td&gt;follow the content&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-n, &amp;ndash;nlines=0&lt;/td&gt;
&lt;td&gt;number of lines to read&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-m, &amp;ndash;master=&amp;ldquo;&amp;rdquo;&lt;/td&gt;
&lt;td&gt;mesos master&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mesos read 5b7a7d41-1f2a-4b6d-93fd-48354d7fa785-S0  /opt/mesos/0/slaves/5b7a7d41-1f2a-4b6d-93fd-48354d7fa785-S0/frameworks/5b7a7d41-1f2a-4b6d-93fd-48354d7fa785-0115/executors/807fe9fa-55df-40fa-ab4f-20e359d51d43/runs/4295fd85-5023-4b0d-a9c8-1d9bdce309ba/stdout

172.17.0.1 - - [08/Jan/2017:03:35:46 +0000] &amp;quot;GET / HTTP/1.1&amp;quot; 200 612 &amp;quot;http://localhost:8080/ui/&amp;quot; &amp;quot;Mozilla/5.0 (X11;...
...
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>run</title>
      <link>https://vektorlab.github.io/mesos-cli/usage/run/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vektorlab.github.io/mesos-cli/usage/run/</guid>
      <description>

&lt;p&gt;Launch a lightweight scheduler for running containers on the target cluster. Run accepts a JSON or YAML encoded document.
By default run will attempt to load &lt;code&gt;Mesosfile&lt;/code&gt; from the current directory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Usage: mesos-cli run [OPTIONS] FILE
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;arguments&#34;&gt;Arguments&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Argument&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;FILE=&amp;ldquo;Mesosfile&amp;rdquo;&lt;/td&gt;
&lt;td&gt;File containing Mesos TaskInfos, - for stdin&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-m, &amp;ndash;master=&amp;ldquo;&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Mesos Master&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-s, &amp;ndash;sync=false&lt;/td&gt;
&lt;td&gt;Run containers synchronously&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;restart=false&lt;/td&gt;
&lt;td&gt;Restart containers on failure&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;

&lt;p&gt;Launch a new task with the Mesos containerizer and restart it on exit&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mesos task --shell &#39;echo $(date); sleep 2&#39; | mesos run --restart -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run an app with Docker and keep it online&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    mesos task --docker -p 31000:80 --image nginx:latest  | mesos run -
    curl localhost:31000
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>task</title>
      <link>https://vektorlab.github.io/mesos-cli/usage/task/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vektorlab.github.io/mesos-cli/usage/task/</guid>
      <description>

&lt;p&gt;Task generates a valid mesos TaskInfo &lt;a href=&#34;https://github.com/apache/mesos/blob/master/include/mesos/v1/mesos.proto#L1551&#34;&gt;protobuf object&lt;/a&gt; and encodes it in JSON (or YAML). It (soon!) will support flags for the entire gamut of options available to a Mesos scheduler. It is intended that this command be convenient for use with the &lt;a href=&#34;https://vektorlab.github.io/mesos-cli/mesos-cli/usage/run&#34;&gt;run&lt;/a&gt; command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Usage: mesos-cli task [OPTIONS] [CMD]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;arguments&#34;&gt;Arguments&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Argument&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CMD=&amp;ldquo;&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Command to run&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;name=mesos-cli&lt;/td&gt;
&lt;td&gt;Friendly task name&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;user=&amp;ldquo;root&amp;rdquo;&lt;/td&gt;
&lt;td&gt;User to run as&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;shell=false&lt;/td&gt;
&lt;td&gt;Run as a shell command&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;uri=&lt;/td&gt;
&lt;td&gt;URIs to fetch&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-e, &amp;ndash;env=&lt;/td&gt;
&lt;td&gt;Environment variables&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-v, &amp;ndash;volume=&lt;/td&gt;
&lt;td&gt;Container volumes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-i, &amp;ndash;image=&lt;/td&gt;
&lt;td&gt;Image to run&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;cpu=0.000000&lt;/td&gt;
&lt;td&gt;CPU resources for this task&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;gpu=0.000000&lt;/td&gt;
&lt;td&gt;GPU resources for this task&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;memory=0.000000&lt;/td&gt;
&lt;td&gt;Memory resources for this task&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;disk=0.000000&lt;/td&gt;
&lt;td&gt;Disk resources for this task&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;privileged=false&lt;/td&gt;
&lt;td&gt;Run Docker in privileged mode&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-p, &amp;ndash;port=&lt;/td&gt;
&lt;td&gt;Port mappings [Docker only]&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;param=&lt;/td&gt;
&lt;td&gt;Docker parameters [Docker only]&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;net=BRIDGE&lt;/td&gt;
&lt;td&gt;Network Mode [Docker only]&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;encoding=&amp;ldquo;json&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Output encoding [json/yaml]&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;docker=false&lt;/td&gt;
&lt;td&gt;Run as a Docker container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;role=&amp;ldquo;&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Mesos role&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;

&lt;p&gt;Launch a new task with the Mesos containerizer.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mesos task --shell &#39;echo $(date); sleep 2&#39; | mesos run -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate a new task and save it to a file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mesos task --encoding=yaml --shell &#39;echo $(date); sleep 2&#39; &amp;gt; my-task.yaml
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>tasks</title>
      <link>https://vektorlab.github.io/mesos-cli/usage/tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vektorlab.github.io/mesos-cli/usage/tasks/</guid>
      <description>

&lt;p&gt;List and filter tasks on the target cluster.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mesos-cli tasks [OPTIONS]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;master=&amp;ldquo;&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Mesos master&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;truncate=true&lt;/td&gt;
&lt;td&gt;Truncate long values&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;task=&amp;ldquo;&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Filter by task id&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;fuzzy=true&lt;/td&gt;
&lt;td&gt;Fuzzy matching on string values&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;state=[]&lt;/td&gt;
&lt;td&gt;filter by task state&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ mesos tasks --state &amp;quot;TASK_FINISHED&amp;quot;

ID        FRAMEWORK STATE         CPU MEM GPU DISK
mesos-cli b620d6e2  TASK_FINISHED 0.1 128 0   32  
mesos-cli b620d6e2  TASK_FINISHED 0.1 128 0   32  
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>top</title>
      <link>https://vektorlab.github.io/mesos-cli/usage/top/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vektorlab.github.io/mesos-cli/usage/top/</guid>
      <description>

&lt;p&gt;Display a Mesos top interface&lt;/p&gt;

&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;master=&amp;ldquo;&amp;rdquo;&lt;/td&gt;
&lt;td&gt;Mesos master&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ mesos top
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>